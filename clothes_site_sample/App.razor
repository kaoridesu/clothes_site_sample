@using clothes_site_sample.scripts.Bases
@using clothes_site_sample.Scripts.Tables
@using System.Text.Json.Serialization
@using System.Text.Json

@inject IRepository<MasterClothEntity> masterClothRepository

@inherits clothes_site_sample.scripts.Bases.AppComponentBase<App>

@if (isLoading)
{
    <p>
        <em>スプレッドシートからデータ取得中...</em>
    </p>
}
else
{
    <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
}

@code
{
    bool isLoading = true;

    public class Database
    {
        [JsonPropertyName("[D]master_clothes")]
        [JsonInclude]
        public List<MasterClothEntity> MasterClothEntities { get; private set; }
    }

    protected override async Task OnInitializedAsync()
    {
    // string json = await HttpClient.GetStringAsync(requestUri: "https://script.google.com/macros/s/AKfycbw_oM7K0sMnA2fYfkq98TsQt1IOsz3TfibyapxefcvLlPEfP5-pszy6G13bdl3XDjAkCw/exec");
        string json = await HttpClient.GetStringAsync(requestUri: "master.json");
        var database = JsonSerializer.Deserialize<Database>(json);

        foreach (var entity in database.MasterClothEntities)
        {
            Console.WriteLine(entity.Id.ToString());
            Console.WriteLine(entity.ProductName.ToString());
        }

        isLoading = false;
    }
}